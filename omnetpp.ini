[General]
network = zwavenetwork.zwave_test.ZWaveNetwork
sim-time-limit = 100s
seed-set = ${repetition}
*.channel.systemModule = "RadioMedium"
*.numNodes = 10  # 5 nodes per row
*.frequency = 908.42MHz
*.range = 30m
*.playgroundSizeX = 100m
*.playgroundSizeY = 100m

**.controller.frequency = 908.42MHz
**.controller.range = 30m
**.node[*].frequency = 908.42MHz
**.node[*].range = 30m
**.controller.frequencyLow = 908.40MHz
**.controller.frequencyHigh = 908.42MHz
**.node[*].frequencyLow = 908.40MHz
**.node[*].frequencyHigh = 908.42MHz

[Config ZWaveMeshNetwork]
description = "ZWave network with rectangular two-row layout"

# First row nodes (0-4)
**.node[0].x = 10m
**.node[0].y = 15m
**.node[1].x = 30m
**.node[1].y = 15m
**.node[2].x = 50m
**.node[2].y = 15m
**.node[3].x = 70m
**.node[3].y = 15m
**.node[4].x = 90m
**.node[4].y = 15m

# Second row nodes (5-9)
**.node[5].x = 10m
**.node[5].y = 45m
**.node[6].x = 30m
**.node[6].y = 45m
**.node[7].x = 50m
**.node[7].y = 45m
**.node[8].x = 70m
**.node[8].y = 45m
**.node[9].x = 90m
**.node[9].y = 45m

# Controller position (centered)
**.controller.x = 50m
**.controller.y = 30m

# First row nodes (0-4) with different device types
**.node[0].deviceType = "Lamp"
**.node[1].deviceType = "Thermostat"
**.node[2].deviceType = "Door Lock"
**.node[3].deviceType = "Lamp"
**.node[4].deviceType = "Lamp"

# Second row nodes (5-9) with additional device types
**.node[5].deviceType = "Lamp"
**.node[6].deviceType = "Door Lock"
**.node[7].deviceType = "Thermostat"
**.node[8].deviceType = "Door Lock"
**.node[9].deviceType = "Door Lock"

# Communication patterns
**.controller.app[0].destAddresses = "node[2] node[7]" # Controller connects to middle nodes of each row
**.controller.app[0].sendInterval = 0.5s
**.controller.app[0].startTime = 0s

# Row-based communication patterns
# First row
**.node[0].app[0].destAddresses = "node[1]"
**.node[1].app[0].destAddresses = "node[2]"
**.node[2].app[0].destAddresses = "node[3]"
**.node[3].app[0].destAddresses = "node[4]"

# Second row
**.node[5].app[0].destAddresses = "node[6]"
**.node[6].app[0].destAddresses = "node[7]"
**.node[7].app[0].destAddresses = "node[8]"
**.node[8].app[0].destAddresses = "node[9]"

# Vertical communications
**.node[0].app[1].destAddresses = "node[5]"
**.node[1].app[1].destAddresses = "node[6]"
**.node[2].app[1].destAddresses = "node[7]"
**.node[3].app[1].destAddresses = "node[8]"
**.node[4].app[1].destAddresses = "node[9]"

# Communication timing
**.node[*].app[*].sendInterval = 2s
**.node[*].app[*].startTime = 1s
